// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TahirMvc123.Models;

namespace TahirMvc123.Migrations
{
    [DbContext(typeof(MvcDBContext))]
    [Migration("20200225192008_UpdateField226")]
    partial class UpdateField226
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TahirMvc123.Models.Cast", b =>
                {
                    b.Property<int>("CastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("VlilageId")
                        .HasColumnType("int");

                    b.HasKey("CastId");

                    b.HasIndex("VlilageId");

                    b.ToTable("Cast");
                });

            modelBuilder.Entity("TahirMvc123.Models.Customers", b =>
                {
                    b.Property<int>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilePic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerid");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TahirMvc123.Models.Family", b =>
                {
                    b.Property<int>("Familyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CastId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Familyid");

                    b.HasIndex("CastId");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("TahirMvc123.Models.FamilyMember", b =>
                {
                    b.Property<int>("Memberid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Children")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Familyid")
                        .HasColumnType("int");

                    b.Property<bool>("MarriedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("parentid")
                        .HasColumnType("int");

                    b.HasKey("Memberid");

                    b.HasIndex("Familyid");

                    b.HasIndex("parentid");

                    b.ToTable("FamilyMember");
                });

            modelBuilder.Entity("TahirMvc123.Models.Vlilage", b =>
                {
                    b.Property<int>("VlilageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("VlilageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VlilageId");

                    b.ToTable("Vlilage");
                });

            modelBuilder.Entity("TahirMvc123.Models.Cast", b =>
                {
                    b.HasOne("TahirMvc123.Models.Vlilage", "Vlilage")
                        .WithMany("Casts")
                        .HasForeignKey("VlilageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TahirMvc123.Models.Family", b =>
                {
                    b.HasOne("TahirMvc123.Models.Cast", "Cast")
                        .WithMany("Family")
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TahirMvc123.Models.FamilyMember", b =>
                {
                    b.HasOne("TahirMvc123.Models.Family", "Family")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("Familyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TahirMvc123.Models.FamilyMember", "Parent")
                        .WithMany("ChildrenList")
                        .HasForeignKey("parentid");
                });
#pragma warning restore 612, 618
        }
    }
}
